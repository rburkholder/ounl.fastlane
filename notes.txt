2019/09/28

Re: [PATCH bpf] libbpf: count present CPUs, not theoretically possible

BTW, if user wants to override the size of maps, they can do it easily
either in map definition or programmatically after bpf_object__open,
but before bpf_object__load, so there is no need for flags, it's all
easily achievable with existing API.

2019/08/26

early doc on parts of messages and attributes
http://smacked.org/docs/netlink.pdf

man page for netlink with many constants:
http://man7.org/linux/man-pages/man7/rtnetlink.7.html

sample qdisc and class code:`
https://lwn.net/Articles/109191/

may have some guidance on decoding netlink link/tc/addr
https://github.com/collectd/collectd/blob/master/src/netlink.c

notes: links can be renumbered, index is not unique across host, use index+nsid (namespace id for uniqueness) [IFLA_IF_NETNSID which may or may not be available]
https://unix.stackexchange.com/questions/441876/how-to-find-the-network-namespace-of-a-veth-peer-ifindex/441898

in doxygen source, useful links:
libnl/doc/api/lib_2route_2link_8c_source.html
lib/route/link.c

nested attributes IFLA_AF_SPEC, IFLA_AF_SPEC
https://lists.gnu.org/archive/html/qemu-devel/2016-07/msg04282.html

from https://www.keepalived.org/changelog.html:
Fix setting i/f params on a bridge underlying i/f of a VMAC
  Issue #944 identified that when the underlying interface of a VMAC
  interface was a bridge, keepalived was failing to set arp_ignore and
  arp_filter in the underlying bridge interface. The problem appears to
  lie in the libnl3 library. The description of the problem given in the
  issue report was:
    Problem is that ifi_family is set to AF_BRIDGE, whereas it should be set
    to AF_UNSPEC. The kernel function that handles RTM_SETLINK messages for
  AF_BRIDGE doesn't know how to process the IFLA_AF_SPEC attribute.
  This commit stops using libnl3 for setting/clearing arp_ignore and
  arp_filter, and directly constructs the netlink messages in keepalived.
* Use RTM_NEWLINK rather than RTM_SETLINK for setting i/f options
  libnl3 uses RTM_NEWLINK rather than RTM_SETLINK for setting
  interface options when ifi_family is AF_UNSPEC, so update commit
  9b2b2c9 - "Fix setting i/f params on a bridge underlying i/f of
  a VMAC" to do likewise.

[PATCH 2/3] Handle family-based parsing of IFLA_AF_SPEC attribute
https://lists.infradead.org/pipermail/libnl/2015-November/002034.html

2019/08/25
https://lore.kernel.org/patchwork/patch/876813/
nlmsghdr->nlmsg_flags = NLM_F_REQUEST | NLM_F_ACK;
nlmsghdr->nlmsg_type = RTM_NEWLINK;
/* move to network namespace of pid */
nla_put_u32(nlmsg, IFLA_NET_NS_PID, pid)
/* give interface new name */
nla_put_string(nlmsg, IFLA_IFNAME, ifname)

https://stackoverflow.com/questions/27008067/how-to-get-notified-about-network-interface-changes-with-netlist-and-rtmgrp-link


2019/08/25

caches and operations available:

NLDBG=1 ../build/cmake.debug.linux.x86_64/AppFastLane/AppFastLane "--docroot=web;/favicon.ico,/resources,/style,/image,/static" --http-address=0.0.0.0 --http-port=8085 --config=etc/wt_config.xml
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations fib_lookup/fib_lookup
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/act
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/addr
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/class
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/cls
DBG<1>lib/route/cls/ematch.c:51   rtnl_ematch_register: ematch module "cmp" registered
DBG<1>lib/route/cls/ematch.c:51   rtnl_ematch_register: ematch module "container" registered
DBG<1>lib/route/cls/ematch.c:51   rtnl_ematch_register: ematch module "meta" registered
DBG<1>lib/route/cls/ematch.c:51   rtnl_ematch_register: ematch module "nbyte" registered
DBG<1>lib/route/cls/ematch.c:51   rtnl_ematch_register: ematch module "text" registered
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/link
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations bond
DBG<1>lib/route/link/api.c:302  rtnl_link_af_register: Registered link address family operations 7
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations can
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations dummy
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations geneve
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations ifb
DBG<1>lib/route/link/api.c:302  rtnl_link_af_register: Registered link address family operations 2
DBG<1>lib/route/link/api.c:302  rtnl_link_af_register: Registered link address family operations 10
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations ip6tnl
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations gre
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations gretap
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations ipip
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations ipvlan
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations vti
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations macsec
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations macvlan
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations macvtap
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations ppp
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations sit
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations veth
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations vlan
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations vrf
DBG<1>lib/route/link/api.c:124  rtnl_link_register_info: Registered link info operations vxlan
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/neigh
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/neightbl
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/netconf
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/qdisc
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/route
DBG<1>    lib/cache_mngt.c:272  nl_cache_mngt_register: Registered cache operations route/rule
[2019-Aug-25 12:33:24.407] 7445 - [info] "config: reading Wt config file: etc/wt_config.xml (location = '../build/cmake.debug.linux.x86_64/AppFastLane/AppFastLane')"
DBG<1>    lib/cache_mngr.c:192  nl_cache_mngr_alloc: Allocated cache manager 0x55ed9f05ec50, protocol 0, 16 caches
DBG<1>    lib/cache_mngr.c:355  nl_cache_mngr_add_cache: Added cache 0x55ed9f060150 <route/link> to cache manager 0x55ed9f05ec50

2019/08/18
# ../build/cmake.debug.linux.x86_64/AppFastLane/AppFastLane "--docroot=web;/favicon.ico,/resources,/style,/image,/static" --http-address=0.0.0.0 --http-port=8085 --config=etc/wt_config.xml
# NLCB=debug NLDBG=2 ../build/cmake.debug.linux.x86_64/AppFastLane/AppFastLane "--docroot=web;/favicon.ico,/resources,/style,/image,/static" --http-address=0.0.0.0 --http-port=8085 --config=etc/wt_config.xml

NLDBG
0 Debugging disabled (default)
1 Warnings, important events and notifications
2 More or less important debugging messages
3 Repetitive events causing a flood of debugging messages
4 Even less important messages



2019/08/17

To build bpf tooling:

apt install jq
apt install binutils-dev
apt install libreadline-dev
wget and expand appropriate kernel in /usr/src
cd linux-...
pushd tools/perf
make
popd
pushd tools/bpf
make
popd

